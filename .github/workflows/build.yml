name: Build and Release

on:
  push:
    tags:
      - 'v*'  # 当推送带有v开头的标签时触发，如v1.0.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
            asset_name: crypto_wallet_generator_macos
            asset_extension: .tar.gz
          - os: ubuntu-latest
            asset_name: crypto_wallet_generator_linux
            asset_extension: .tar.gz

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
        pip install -r requirements_secure.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller --onefile --clean --name=crypto_wallet_secure crypto_wallet_secure_optimized.py
        # 复制utils目录到dist目录
        cp -r utils dist/
      shell: bash

    - name: Create launcher (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        echo '#!/bin/bash' > dist/启动钱包生成工具.command
        echo 'cd "$(dirname "$0")"' >> dist/启动钱包生成工具.command
        echo 'echo "正在启动加密货币钱包助记词生成工具..."' >> dist/启动钱包生成工具.command
        echo './crypto_wallet_secure' >> dist/启动钱包生成工具.command
        chmod +x dist/启动钱包生成工具.command

    - name: Create launcher (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        echo '#!/bin/bash' > dist/启动钱包生成工具.sh
        echo 'cd "$(dirname "$0")"' >> dist/启动钱包生成工具.sh
        echo 'echo "正在启动加密货币钱包助记词生成工具..."' >> dist/启动钱包生成工具.sh
        echo './crypto_wallet_secure' >> dist/启动钱包生成工具.sh
        chmod +x dist/启动钱包生成工具.sh

    - name: Copy documentation
      run: |
        cp README.md dist/
        cp LICENSE dist/
      shell: bash

    - name: Create usage instructions
      run: |
        echo "加密货币钱包助记词生成工具 - 使用说明" > dist/使用说明.txt
        echo "==============================" >> dist/使用说明.txt
        echo "" >> dist/使用说明.txt
        echo "本程序用于安全生成和管理加密货币钱包助记词。" >> dist/使用说明.txt
        echo "" >> dist/使用说明.txt
        echo "使用方法：" >> dist/使用说明.txt
        if [ "${{ matrix.os }}" = "macos-latest" ]; then
          echo "1. 双击运行 '启动钱包生成工具.command'" >> dist/使用说明.txt
        else
          echo "1. 运行 './启动钱包生成工具.sh'" >> dist/使用说明.txt
        fi
        echo "2. 按照程序提示进行操作" >> dist/使用说明.txt
        echo "" >> dist/使用说明.txt
        echo "安全提示：" >> dist/使用说明.txt
        echo "- 建议在离线环境中使用本工具" >> dist/使用说明.txt
        echo "- 妥善保管生成的助记词，不要分享给他人" >> dist/使用说明.txt
        echo "- 考虑使用SLIP-39分割备份增强安全性" >> dist/使用说明.txt
        echo "" >> dist/使用说明.txt
        echo "详细文档请参阅 README.md 文件" >> dist/使用说明.txt
      shell: bash

    - name: Create archive (macOS/Linux)
      run: |
        cd dist
        tar -czvf ../${{ matrix.asset_name }}${{ matrix.asset_extension }} *

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: ${{ matrix.asset_name }}${{ matrix.asset_extension }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            crypto_wallet_generator_macos/crypto_wallet_generator_macos.tar.gz
            crypto_wallet_generator_linux/crypto_wallet_generator_linux.tar.gz
          draft: false
          prerelease: false
          generate_release_notes: true